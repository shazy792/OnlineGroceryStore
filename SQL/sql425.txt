CREATE TABLE address (
  addressId   int           PRIMARY KEY,
  street      varchar(100)  NOT NULL,
  city        varchar(25)   NOT NULL, 
  state       char(2)       NOT NULL,
  zipcode     varchar(15)   NOT NULL
);

CREATE TABLE creditCard(
    cardNumber  char(16) PRIMARY KEY,
    cvc         char(3)   NOT NULL,
    nameOnCard  varchar(100)  NOT NULL,
    expiryMonth char(2)       NOT NULL,
    expiryYear  char(2)       NOT NULL,
    paymentAddress  int       NOT NULL,
    
    FOREIGN KEY (paymentAddress) REFERENCES address(addressID)
);

CREATE TABLE customer (
    customerId  int     PRIMARY KEY,
    firstName   varchar(25) NOT NULL,
    lastName    varchar(25) NOT NULL,
    email       varchar(100) NOT NULL,
    balance     float ,
    addressId   int,
    cardNumber  char(16),

    FOREIGN KEY (addressId) REFERENCES address(addressId),
    FOREIGN KEY (cardNumber) REFERENCES creditCard(cardNumber)
);

CREATE TABLE staff (
    staffId     int PRIMARY KEY,
    firstName   varchar(25) NOT NULL,
    lastName    varchar(25) NOT NULL,
    email       varchar(100) NOT NULL,
    salary      float ,
    title       varchar(25),
    addressId   int,

    FOREIGN KEY (addressId) REFERENCES address(addressId)
);

CREATE TABLE category (
    categoryId        int PRIMARY KEY,
    type              varchar(25) NOT NULL,
    additionalInfo    varchar(200) 
);

CREATE TABLE warehouse (
    warehouseId        int PRIMARY KEY,
    storageCapacity     int NOT NULL,
    addressId           int,
    
    FOREIGN KEY (addressId) REFERENCES address(addressID)
);

CREATE TABLE supplier (
    supplierId        int PRIMARY KEY,
    email     varchar(100) NOT NULL,
    phone     varchar(10) NOT NULL,
    addressId           int,
    
    FOREIGN KEY (addressId) REFERENCES address(addressID)
);

CREATE TABLE product(
    productId        int  PRIMARY KEY,
    productName      varchar(100) NOT NULL,
    productSize      float,
    details          varchar(200),
    categoryId       int,
    
    FOREIGN KEY (categoryId) REFERENCES category(categoryId)
);

CREATE TABLE productPrice(
    productId        int  NOT NULL,
    addressId        int  NOT NULL,
    price      float,
    
    PRIMARY KEY (productId, addressId),
    FOREIGN KEY (productId) REFERENCES product(productId),
    FOREIGN KEY (addressId) REFERENCES address(addressId)
);

CREATE TABLE supplies(
    productId        int  NOT NULL,
    supplierId        int  NOT NULL,
    supplierPrice      float,
    
    PRIMARY KEY (productId, supplierId),
    FOREIGN KEY (productId) REFERENCES product(productId),
    FOREIGN KEY (supplierId) REFERENCES supplier(supplierId)
);

CREATE TABLE orderInfo(
    orderId           int  PRIMARY KEY,
    customerId        int  NOT NULL,
    cardNumber        char(16),
    orderDate         float,
    status            varchar(25),
 
    
    FOREIGN KEY (customerId) REFERENCES customer(customerId),
    FOREIGN KEY (cardNumber) REFERENCES creditcard(cardNumber)
);

CREATE TABLE orderDetails(
    orderId           int,
    productID         int,
    Quantity          int,
 
    PRIMARY KEY (orderId,productID),
    FOREIGN KEY (orderId) REFERENCES orderInfo(orderId),
    FOREIGN KEY (productID) REFERENCES product(productID)
);

CREATE TABLE stock(
    warehouseId           int,
    productID         int,
    Quantity          int,
 
    PRIMARY KEY (warehouseId,productID),
    FOREIGN KEY (warehouseId) REFERENCES warehouse(warehouseId),
    FOREIGN KEY (productID) REFERENCES product(productID)
);

CREATE VIEW orders AS

SELECT i.orderID, orderDate, status, c.CUSTOMERID,c.EMAIL, d.CARDNUMBER, d.CVC ,d.EXPIRYMONTH,d.EXPIRYYEAR,d.NAMEONCARD,p.*,o.QUANTITY
FROM 
    orderinfo i 
        left join 
    customer  c
          on (i.customerId = c.customerId)
        left join
    creditcard d
          on  (i.cardnumber = d.cardnumber)
        left join
    orderdetails o
          on  (o.orderId = i.orderID)
        left join
    product p
          on (o.productId = p.productId);



CREATE VIEW storageSpace AS 
with iSpace as (
select warehouseId, productsize * s.quantity as itemSpace
from stock s
        left join 
     product p
        on (s.productId = p.productId)    
), uSpace as (
select warehouseId, SUM(itemSpace) usedSpace
from iSpace
group by warehouseId
)
select u.warehouseId, usedSpace, (usedSpace - storageCapacity) availableSpace
from uSpace u
      inner join 
     warehouse w
        on (u.warehouseId = w.warehouseId)
        
;

create table sessionstore (
  customerid INT,
  orderdetail VARCHAR2(4000)
);